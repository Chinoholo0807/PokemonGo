#include "widget.h"
#include "ui_widget.h"
#include"define.h"
#include<QJsonObject>
#include<QJsonDocument>
#include<QMessageBox>
Widget::Widget(QWidget *parent)
    : QWidget(parent)
    , ui(new Ui::Widget)
{
    ui->setupUi(this);
    //连接按钮和对应槽函数
    setWindowTitle("Pokeman 客户端");
    setWindowFlags(Qt::WindowCloseButtonHint);
    connect(ui->pushButtonLogin,&QPushButton::clicked,this,&Widget::slotPushButtonLogin);
    connect(ui->pushButtonRegister,&QPushButton::clicked,this,&Widget::slotPushButtonRegister);
    //连接到服务器
    
    
}

Widget::~Widget()
{
    delete ui;
}
void Widget::slotPushButtonLogin(){
    //获取用户名和密码
    QString userName =ui->lineEditUserName->text();
    QString password=ui->lineEditPassword->text();
    //向服务器发送登录请求
    client= new Client();//创建新用户
    client->socketConnect();
    client->setUserName(userName);//设置用户名
    QJsonObject msg;
    msg.insert("TPYE",LOGIN);
    msg.insert("userName",userName);
    msg.insert("password",password);
    QJsonDocument doc(msg);
    QByteArray ret = client->sendMsg(doc.toJson()).toLocal8Bit();
    QJsonObject retj=QJsonDocument::fromJson(ret).object();
    switch(retj.value("TPYE").toInt()){
    case LOGIN_WP:
        client->close();//关闭socket
        delete client;
        QMessageBox::information(this,"登录失败","用户名错误或密码错误");
        break;
    case LOGIN_OL:
        client->close();//关闭socket
        delete client;
        QMessageBox::information(this,"登录失败","当前用户已在线");
        break;
    case LOGIN_SC:
        //登录成功
        break;
    default:
        client->close();//关闭socket
        delete client;
        QMessageBox::information(this,"登录失败","未知错误");
        break;
    }
    
}
void Widget::slotPushButtonRegister(){

}
